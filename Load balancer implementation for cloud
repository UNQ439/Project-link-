Creating a WordPress blog with a load balancer and two or more virtual machines (VMs) on three major cloud platforms—AWS, Azure, and Google Cloud—typically involves setting up the following components:

### AWS (Amazon Web Services)

1. **Create VMs (EC2 Instances):**
   - Launch two or more EC2 instances. Choose an appropriate instance type based on your workload and performance requirements.
   - Install and configure WordPress on each EC2 instance. Connect each instance to a shared database instance (e.g., Amazon RDS MySQL) or use a managed database service.

2. **Set Up Load Balancer:**
   - Create an Application Load Balancer (ALB) or Network Load Balancer (NLB) in AWS.
   - Configure the load balancer to distribute traffic evenly across the EC2 instances running WordPress.
   - Ensure health checks are configured to monitor the status of each EC2 instance.

3. **Domain and Security Configuration:**
   - Assign an Elastic IP (EIP) to the load balancer for a static IP address.
   - Configure Route 53 for DNS management and map your domain to the load balancer.

4. **Scaling and High Availability:**
   - Set up Auto Scaling groups to automatically add or remove EC2 instances based on traffic patterns and load.
   - Configure AWS services like CloudWatch for monitoring and scaling triggers.

### Azure

1. **Create VMs (Virtual Machines):**
   - Deploy two or more VMs in Azure. Choose appropriate VM sizes based on your requirements.
   - Install and configure WordPress on each VM. Connect each VM to a shared database instance (e.g., Azure Database for MySQL) or use another managed database service.

2. **Set Up Load Balancer:**
   - Create an Azure Load Balancer.
   - Configure the load balancer to distribute traffic across the VMs hosting WordPress.
   - Configure health probes to monitor the health of each VM.

3. **Domain and Security Configuration:**
   - Assign a Public IP address to the load balancer.
   - Configure Azure DNS or use your domain registrar for DNS management and point your domain to the load balancer’s IP address.

4. **Scaling and High Availability:**
   - Implement Virtual Machine Scale Sets for automatic scaling based on demand.
   - Utilize Azure Monitor for performance monitoring and scaling triggers.

### Google Cloud Platform (GCP)

1. **Create VMs (Compute Engine Instances):**
   - Deploy two or more Compute Engine instances in GCP. Choose suitable machine types and sizes.
   - Install and configure WordPress on each instance. Connect each instance to a shared database (e.g., Cloud SQL for MySQL) or use a managed database service.

2. **Set Up Load Balancer:**
   - Create an HTTP(S) Load Balancer in GCP.
   - Configure backend services to point to the instances running WordPress.
   - Set up health checks to monitor the status of each instance.

3. **Domain and Security Configuration:**
   - Reserve a static external IP address for the load balancer.
   - Use Google Cloud DNS for DNS management and map your domain to the load balancer’s IP address.

4. **Scaling and High Availability:**
   - Configure Managed Instance Groups for automatic scaling based on load.
   - Use Stackdriver Monitoring for performance monitoring and scaling policies.

### Common Considerations

- **Database Choice:** Ensure your chosen database service (MySQL, PostgreSQL, etc.) is highly available and can handle the expected load.
- **Backup and Disaster Recovery:** Implement regular backups and disaster recovery plans for both the WordPress data and database.
- **Security:** Configure security groups, network ACLs, SSL certificates, and other security measures based on best practices for each cloud provider.

Each cloud platform provides specific tools and services to accomplish these tasks. Detailed configurations will vary based on your specific requirements and the features available in each cloud provider's ecosystem.
